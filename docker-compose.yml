version: "3.8"

services:
  bet_maker_db:
    image: postgres
    container_name: bet_maker_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata_bet_maker:/var/lib/postgresql/data

  line_provider_db:
    image: postgres
    container_name: line_provider_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5434:5432"
    volumes:
      - pgdata_line_provider:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  bet_maker:
    build: ./bet-maker
    container_name: bet_maker
    ports:
      - "8000:8000"
    env_file:
      - ./bet-maker/.env.docker
    depends_on:
      bet_maker_db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  line_provider:
    build: ./line-provider
    container_name: line_provider
    ports:
      - "8001:8001"
    env_file:
      - ./line-provider/.env.docker
    depends_on:
      line_provider_db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: on-failure

volumes:
  pgdata_bet_maker:
  pgdata_line_provider:
